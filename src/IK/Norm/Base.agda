{-# OPTIONS --without-K #-}
module IK.Norm.Base where

open import Data.Unit    using (âŠ¤ ; tt)
open import Data.Product using (Î£ ; _Ã—_ ; _,_)

open import IK.Norm.NbE.Model
open import IK.Norm.NbE.Reification

open import IK.Term

-------------------------
-- Normalization function
-------------------------

-- retraction of interpretation
quot : (Sub'- Î“ â†’Ì‡ Tm'- a) â†’ Nf Î“ a
quot f = reify (f idâ‚›')

-- normalization function
norm : Tm Î“ a â†’ Nf Î“ a
norm t = quot (eval t)

----------------------------------
-- Normalization for substitutions
----------------------------------

-- (simply "do everything pointwise")

-- retraction of evalâ‚›
quotâ‚› : Sub'- Î“ â†’Ì‡ Nfâ‚›- Î“
quotâ‚› {[]}     tt         = []
quotâ‚› {Î“ `, _} (s , x)    = (quotâ‚› s) `, (reify x)
quotâ‚› {Î“ ðŸ”’}    (lock s e) = lock (quotâ‚› s) e

-- normalization function, for substitutions
normâ‚› : Sub Î” Î“ â†’ Nfâ‚› Î” Î“
normâ‚› s = quotâ‚› (evalâ‚› s idâ‚›')
