{-# OPTIONS --safe --with-K #-}
module IS4.Norm.Base where

open import Data.Unit    using (tt)
open import Data.Product using (_,_)

open import IS4.Norm.NbE.Model
open import IS4.Norm.NbE.Reification

open import IS4.Term

-- retraction of interpretation
quot : Sub'- Î“ â†’Ì‡ Tm'- a â†’ Nf Î“ a
quot {Î“} {a} f = reify a (f (idâ‚›' Î“))

-- retraction of evalâ‚› (simply "do everything pointwise")
quotâ‚› : Sub'- Î“ â†’Ì‡ Nfâ‚›- Î“
quotâ‚› {[]}     tt                        = []
quotâ‚› {Î“ `, a} (elem (s , x))            = quotâ‚› s `, reify a x
quotâ‚› {Î“ ðŸ”’}   (elem (Î“L , (Î“R , e) , s)) = lock (quotâ‚› s) e

-- normalization function
norm : Tm Î“ a â†’ Nf Î“ a
norm t = quot (eval t)

-- normalization function, for substitutions
normâ‚› : Sub Î” Î“ â†’ Nfâ‚› Î” Î“
normâ‚› {Î“} s = quotâ‚› (evalâ‚› s (idâ‚›' Î“))
